generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:root@127.0.0.1:3306/nsns"
}

model SmsCode {
  id       Int      @id @default(autoincrement())
  phone    String   @db.VarChar(255)
  type     Int
  code     String   @db.VarChar(6)
  ip       String   @db.VarChar(255)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model SmsSendLog {
  id       Int      @id @default(autoincrement())
  phone    String   @db.VarChar(255)
  content  String   @db.Text
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Users {
  id       Int        @id @default(autoincrement())
  phone    String     @unique @db.VarChar(255)
  passwd   String     @db.VarChar(255)
  blance   Decimal    @default(0.00) @db.Decimal(10, 2)
  invite   String     @db.VarChar(6)
  role     String     @default("user") @db.VarChar(255)
  status   Int        @default(1)
  createAt DateTime   @default(now())
  updateAt DateTime   @updatedAt
  client   Clients[]
  spend    SpendLog[]
}

model Clients {
  id       Int      @id @default(autoincrement())
  source   String   @default("tb")
  tb       String
  account  String   @unique
  passwd   String
  used     Int      @default(0)
  traffic  Int      @default(0)
  status   Int      @default(1)
  expireAt DateTime @default(now())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  Users    Users    @relation(fields: [userId], references: [id])
  userId   Int
}

model Goods {
  id       Int      @id @default(autoincrement())
  name     String
  sku      String   @unique
  traffic  Int      @default(0)
  days     Int      @default(30)
  price    Decimal  @default(0.00) @db.Decimal(10, 2)
  status   Int      @default(1)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model SpendLog {
  id       Int      @id @default(autoincrement())
  type     Int
  amount   Decimal  @db.Decimal(10, 2)
  remark   String?
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  Users    Users    @relation(fields: [userId], references: [id])
  userId   Int
}
